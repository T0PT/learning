import discord
import discord as ds
token='ODk0OTc4NzQ3MzkwODk0MTYw.YVx36Q.y2XvtaCeEY9xwI8W80bn32R6Eig'
intents = ds.Intents.all()
perm = ds.Permissions.all()
intents.members=True
perm.ban_members=True
perm.kick_members=True
client=ds.Client(intents=intents, permissions=perm)
role_message_id=902573047473655888
emoji_to_role={
    discord.PartialEmoji(name='ü•±'):902571454497951845,
    discord.PartialEmoji(name='üòé'):902571547624083466
}
channel=''
answers={'!–ø—Ä–∏–≤':'–î–∞—Ä–æ—É', # dialog=1
        '!–∫–∞–∫ –¥–µ–ª–∞':'–¢–∞ –≤–æ—Ç –æ–¥–∏–Ω –∫–æ–∂–∞–Ω—ã–π –ø—Ä–∏—à—ë–ª, –≥–æ–≤–æ—Ä–∏—Ç—å —Ö–æ—á–µ—Ç',
        '!–ø–æ–∏–≥—Ä–∞–µ–º':'–ì–æ, —Ç–æ–ª—å–∫–æ —è —Ö–∑ –≤–æ —á—Ç–æ'}
howareyou={'!–∫–∞–∫ –¥–µ–ª–∞':'–¢–∞ –Ω–æ—Ä–º, –∞ —Ç—ã –∫–∞–∫, –º–æ–π –∫–æ–∂–∞–Ω—ã–π –¥—Ä—É–≥?', # dialog=2
           '!–æ–∫':'–æ–∫',
           '!—Ç–∞–∫ —Å–µ–±–µ':'–∂–∏–≤–∏, –±—Ä–∞—Ç',
           '!–ø–ª–æ—Ö–æ':'—Å–æ–±–æ–ª–µ–∑–Ω—É—é –±—Ä–æ',
           '!–Ω–æ—Ä–º':'–æ–∫, –Ω–µ –≤—ã–∫–ª—é—á–∞–π –º–µ–Ω—è –±—Ä–æ',
           '!–ø–æ –∫–∞–π—Ñ—É':'–∫–ª–∞—Å—Å, –∏ —É –º–µ–Ω—è',
           '!–æ—Ç–ª–∏—á–Ω–æ':'–∫—Ä–∞—Å–∞–≤–∞',
           }
@client.event
async def on_ready():
    print('hello gays, my name is: '+str(client.user.name)+', my id is: '+str(client.user.id))
@client.event
async def on_raw_reaction_add(payload=discord.RawReactionActionEvent): #...ADD ROLE...
    global role_message_id,emoji_to_role
    guild=client.get_guild(payload.guild_id)
    if payload.message_id == role_message_id and guild != None:
        try:
            role_id=emoji_to_role[payload.emoji]
        except KeyError:
            print('not such role as: '+str(payload.emoji))
            return
        if guild.get_role(role_id) != None:
            await payload.member.add_roles(guild.get_role(role_id))

@client.event
async def on_raw_reaction_remove(payload=discord.RawReactionActionEvent): #...REMOVE ROLE...
    global role_message_id,emoji_to_role
    guild = client.get_guild(payload.guild_id)
    if payload.message_id == role_message_id and guild != None:
        try:
            role_id=emoji_to_role[payload.emoji]
        except KeyError:
            print('not such role as: '+str(payload.emoji))
            return
        if guild.get_role(role_id) != None:
            member=guild.get_member(payload.user_id)
            await member.remove_roles(guild.get_role(role_id))

@client.event
async  def on_message(message):

    global channel
    def checkfunc(x):
        return x.channel==channel

    channel=message.channel
    print(message.content)
    if str.lower(message.content).startswith('!ban'):
        words=message.content.split(' ')
        for mem in client.get_all_members():
            print(str(mem))
            print(str(words[1]))
            if str(mem)==str(words[1]):
                await channel.send('–ª–æ–≤–∏ –±–∞–Ω, –ª–æ—Ö')
                await mem.ban(reason='ban, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ—Ç–æ–º—É', delete_message_days=1)
    if str.lower(message.content).startswith('!kick'):
        words=message.content.split(' ')
        for mem in client.get_all_members():
            print(str(mem))
            print(str(words[1]))
            if str(mem)==str(words[1]):
                await channel.send('–ª–æ–≤–∏ kik, –ª–æ—Ö')
                await mem.kick(reason='kik, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ—Ç–æ–º—É')
    elif message.content[0]=='!':
        for key in answers.keys():
            if message.content.lower().startswith(key):
                if key=='!–∫–∞–∫ –¥–µ–ª–∞':
                    await channel.send(howareyou[key])
                    ans= await client.wait_for('answer', check=checkfunc)
                    for answr in howareyou:
                        if ans.lower().startswith(answr):
                            await channel.send(howareyou[answr])
                elif message.content.lower() in answers:
                    await channel.send(answers[key])
                else:
                    await channel.send('–æ–ø—è—Ç—å –±—Ä–µ–¥ –Ω–µ –ø–∞–Ω–∏–º–∞—é —Ç–≤–æ–π')

client.run(token)